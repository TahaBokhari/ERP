/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qasproject;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author tahab
 */
public class salarySheet extends javax.swing.JFrame {

    /**
     * Creates new form attandanceSheet
     */
    Connection conn=null;
    static boolean dateFlag=false;
    static String d=null;
//    Statement stmt=null;
//    ResultSet rs=null;
    public salarySheet() throws SQLException {
        initComponents();
        this.setTitle("Attandance Sheet");
        conn=DBconnection.connectDb();
        
        Date date = new Date();
        currDate.setDate(date);
        java.sql.Date sqlDate = new java.sql.Date(currDate.getDate().getTime());
        d=sqlDate.toString();
        //java.sql.Date date1=(java.sql.Date) currDate.getTime();
        
        System.out.println(sqlDate);
        
        
        //currDate.setEnabled(false);
        
        dateFlag=checkAttendance(sqlDate);
        
        if(dateFlag==false){
        //String sql="Select distinct (employeeId),name From Employees";
            submit.disable();
            print.disable();
            currDate.setEnabled(false);
            
            
        }
        else if(dateFlag==true){
        
        populateEmployee();
        String[] values={"--Please Select--","Present","Absent"};
        JComboBox c=new JComboBox(values);
        itemTable.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(c));
        }
        
        
        
    }

    private boolean checkAttendance(Date currentDate) throws SQLException
    {
        ArrayList <String> enteredDates=new ArrayList();
        Statement stmt;
        ResultSet rs= null;
        String sql="Select distinct (attendanceDate) From attendance";
        
        try{
         stmt=conn.createStatement();
         rs=stmt.executeQuery(sql);
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            
        }
        
        while(rs.next())
         {
             System.out.println("not null");
             String supplier=rs.getString(1);
             enteredDates.add(supplier);
             
         }
        System.out.println("list: "+enteredDates);
        System.out.println("passed date :"+currentDate.toString());
        
        if(enteredDates.contains(currentDate.toString()))
        {
            return false;
        }
        
        return true;
    }
    
    private void populateEmployee() throws SQLException
    {
        Statement stmt;
        ResultSet rs= null;
        String sql="Select distinct (employeeId)AS Employee_ID,name AS Name,fatherName AS Father_Name,department AS Department,fatherName AS Attendance From employees";
        
        try{
         stmt=conn.createStatement();
         rs=stmt.executeQuery(sql);
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            
        }
        
        itemTable.setModel(DbUtils.resultSetToTableModel(rs));
        
        for(int i=0;i<itemTable.getRowCount();i++)
        {
        itemTable.setValueAt("--Please Select--", i, 4);
        }
//        String[] values={"--Please Select--","Present","Absent"};
//        JComboBox c=new JComboBox(values);
        //itemTable.getColumnModel().getColumn(2).setCellEditor(new DefaultCellEditor(c));
//        plants.add("--Please Select--");
//         while(rs.next())
//         {
//             System.out.println("not null");
//             String plant=rs.getString(1);
//             plants.add(plant);
//             
//         }
//         
//        DefaultComboBoxModel model2 = new DefaultComboBoxModel(plants.toArray());
//        deptCombo.setModel( model2);
         
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        currDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        submit = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Date :");

        itemTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        itemTable.setRowHeight(24);
        jScrollPane1.setViewportView(itemTable);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        print.setText("Print");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1313, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(print))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        //checking if all selected
        if(dateFlag==true){
            
            if(currDate.getDate().before(new java.util.Date()))
            {
        
        java.sql.Timestamp date = new java.sql.Timestamp( currDate.getDate().getTime());//new java.util.Date().getTime()
        
        System.out.println(date);
        boolean flag=true;
        
        for(int j=0;j<itemTable.getRowCount();j++)
        {
            if(itemTable.getValueAt(j, 4).toString().equals("--Please Select--"))
            {
                JOptionPane.showMessageDialog(null,"Attendance not marked for "+itemTable.getValueAt(j, 0));
                flag=false;
            }
        }
        
    if(flag==true)
    {
        
        PreparedStatement pstmt=null;
        
        String sql4="INSERT into attendance values (default,?,?,?)" ;
        
            try {
                pstmt = conn.prepareStatement(sql4);
            } catch (SQLException ex) {
                Logger.getLogger(salarySheet.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        int rows=itemTable.getRowCount();
        //Date currentDate=currDate.getDate();
        
        for(int i=0;i<rows;i++)
        {
            try {
                String eId=itemTable.getValueAt(i, 0).toString();
                String empStatus=itemTable.getValueAt(i, 4).toString();
                
                pstmt.setString(1, eId);
                pstmt.setTimestamp(2, date);
                pstmt.setString(3, empStatus);
                
                
                pstmt.addBatch();
            } catch (SQLException ex) {
                Logger.getLogger(salarySheet.class.getName()).log(Level.SEVERE, null, ex);
            }
         
        }
        
            try {
                pstmt.executeBatch();
            } catch (SQLException ex) {
                Logger.getLogger(salarySheet.class.getName()).log(Level.SEVERE, null, ex);
            }
            //conn.commit();
        JOptionPane.showMessageDialog(null,"  Successfully Saved! ");
        
       }
        }
         else
        {
            JOptionPane.showMessageDialog(null,"  Cannot enter future date ");
        }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"  Cannot submit attendance ");
        }
        
    }//GEN-LAST:event_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(salarySheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(salarySheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(salarySheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(salarySheet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                   salarySheet obj= new salarySheet();
                   obj.setVisible(true);
                   
                    if(dateFlag==false)
                    {
                        JOptionPane.showMessageDialog(null,"Attendance already marked for "+d);
                        obj.setEnabled(false);
                        //obj.setBackground(new Color(0,100,0,100));
                        
                        
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(salarySheet.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser currDate;
    private javax.swing.JTable itemTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton print;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}
